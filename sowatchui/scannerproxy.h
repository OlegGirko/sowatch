/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c ScannerProxy -p scannerproxy ../sowatchd/scanner.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SCANNERPROXY_H_1344446154
#define SCANNERPROXY_H_1344446154

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.javispedro.sowatch.WatchScanner
 */
class ScannerProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.javispedro.sowatch.WatchScanner"; }

public:
    ScannerProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ScannerProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Start()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Start"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Finished();
    void Started();
    void WatchFound(const QVariantMap &info);
};

namespace com {
  namespace javispedro {
    namespace sowatch {
      typedef ::ScannerProxy WatchScanner;
    }
  }
}
#endif
